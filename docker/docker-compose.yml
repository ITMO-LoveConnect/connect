services:
  ##### DEV PROFILE #####
  dev_postgres:
    profiles:
      - dev
    image: postgres:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "54322:5432"
    networks:
      - mynetwork

  dev_minio:
    image: minio/minio
    profiles:
      - dev
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /data
    ports:
      - "9000:9000"
    networks:
      - mynetwork

  ##### PROD PROFILE #####
  prod_postgres:
    profiles:
      - prod
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - /data/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

  prod_minio:
    image: minio/minio
    profiles:
      - prod
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data
    volumes:
      - /data/minio:/data
    ports:
      - "9000:9000"
    networks:
      - mynetwork

  prod_app:
    image: ghcr.io/itmo-loveconnect/connect:latest
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: prod
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    profiles:
      - prod
    depends_on:
      prod_postgres:
        condition: service_healthy
      prod_minio:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
